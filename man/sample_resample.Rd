% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/samples-functions.R
\name{sample_resample}
\alias{sample_resample}
\title{Re-Sample Sample Data}
\usage{
sample_resample(sampleDataFrame, resample_vector, resample_dt,
  IDs = "all", rep_select = "all", rep_create = c(1),
  overwrite = FALSE, writeToDisk = TRUE)
}
\arguments{
\item{sampleDataFrame}{a tibble opened with sample_load or created with sample_create.  The tibble MUST
have a 'path' attribute assigned to it, and this MUST point to the tibbles location relative to the
Project Note DIR.  Use sample_load() to load Single tibble for resampling.}

\item{resample_vector}{Character vector containing identifiers for the new Samples.  Use '-' and NOT
'_' to separate components within a single identifier.}

\item{resample_dt}{a Datetime of the re-sampling event, can be a single string (for all IDs), or a vector
with a new datetime for each ID.}

\item{IDs}{Character vector indicating which subset of IDs to apply the re-sampling to. By default
the re-sampling is applied to "all".  The function will fail if any of the selected IDs (and
replicates) have been re-sampled or exported already.}

\item{rep_select}{List of integer/numeric vectors to represent the selection of replicates from the
sampleDataFrame. This vector is used to select SECTIONS from a sampleDataFrame which has previously
been re-sampled with replicate subsamples (see rep_create below).  The list can always be of length 1,
in which case the same replicates are selected for ALL IDs. Otherwise it must be the same length as
ID from the sampleDataFrame, in which case each vector in the list selects a unique set of replicates
from each ID in the sampleDataFrame; or if the IDs parameter has been set, a list the same length
as IDs can be passed, with each vector in the list selecting a unique set of replicates from the
set of IDs passed.  The function will fail if any of the selected replicates have been re-sampled or
exported already. Uses the KEY WORD "all" to select all replicates by default.}

\item{rep_create}{Integer vector representing how many replicates of each subsample are to be created.
Used to denote SECTIONING.  Set to 1 by default - in which case NO resample_rep column is create. The
vector can always be of length 1, in which case the same replicates are created for ALL IDs. Otherwise
it must be the same length as ID from the sampleDataFrame, in which case each value in the vector
represented the unique number of replicates created; or if the IDs parameter has been set, a vector
the same length as IDs could be passed, with each value in the vector representing the unique number
of replicates created for the set of IDs passed.}

\item{writeToDisk}{Boolean to indicate whether the edits made to sampleDataFrame and the newly formed
DataFrames are saved to disk.  TRUE by default - set to FALSE to test run the re-sampling.}
}
\value{
A newly created and saved list of TIBBLES : one for each value in resample_vector.
}
\description{
This function receives a `sampleDataFrame` (a Tibble which contains a 'path' attribute - this
is the name of the file in the Project Note's Data Dir), a `resample_vector` that contains each
new sub-sample, and a `resample_dt` that contains the datetime of resampling.
}
\details{
The sample DataFrame is re-sampled:

- new columns to indicate the resampling are created (`resample`, `resample_dt`), and filled (with
  a space-separated String of the `resample_vector` and the `resample_dt`, respectively).

By default, all samples in `sampleDataFrame` will be resampled. However, subsets of IDs and replicates
can be selected by setting the IDs and rep_select ARGs:

- `IDs` - set to a Character Vector containing a subset of IDs to apply the re-sampling to.
  Any remaining IDs will have their resample/resample_dt columns left BLANK.

- `rep_select` - can be set to a List of Integer/numeric vectors to select replicates for re-sampling.
  Each vector in the list represents each ID (in order of IDs in the Data Frame if all IDs, otherwise
  using the IDs ordering from the IDs ARG).

The `resample_vector` should contain a set of user-defined LABELS for each new subsample.  For example,
if a mouse brain is re-sampled, one may end up with a series of individually identifiable
tissue blocks, which could be labelled: LT-FB, RT-FB, LT-MB, RT-MB, etc.  A space-separated
list of these labels will be placed in the `resample` column of the `sampleDataFrame`.

When performing the resampling, it is possible to create REPLICATES for each new component, by setting
the `rep_create` ARG:

- `rep_create` - set to a numeric vector containing the number of replicates of EACH SAMPLE during the
  resampling. This is used to encode the SECTIONING of a Sample into identical (same thickness) sections.

For example, a `CNS_LT-FB` block of all samples could be sectioned into 350um thick sections: this would
be represented by performing a re-sampling, setting `resample_vector` to c("350um"), and `rep_create`
to a numeric vector - each element containing the number of sections for each ID (following the order
in the original `sampleDataFrame`).

For each item in the `resample_vector`, a NEW DATA FRAME is created: Each new dataframe will be filled
with the `ID`, any previous subsampling columns, and a new subsampling column (`subsample_INDEX`) that
contains the new subsample labelling code (i.e. LT-FB, RT-FB, LT-MB, RT-MB, etc).  Only samples selected
with `IDs` and `rep_select` will be moved to the new subsample data frames.  When `rep_create` is
used to create replicates, a `subsample_INDEX_rep` column will be generated in the new DataFrame(s),
filled with the replicate number (i.e. a series of integers: 1, 2, 3 etc.).  Each new row now represents
the new replicate of the subsample.

To check the results of a given resampling, its possible to set the writeToDisk boolean to FALSE: in this
case the computations are performed, the edits made to a copy of the original sampleDataFrame, and copies
of the old and new DataFrames are all returned for inspection.  Once the inputs are known to be correct,
the actual resampling (with writing of CSVs to Disk) can be performed with writeToDisk set to TRUE - its
default value.

The function is assumed to be run inside an R Chunk in an Rmd file that is a Project Note from the
projectmanagr package.  It assumes the document is saved to disk, it contains a PREFIX, separated from
the Note title with the '~_' separator, and that an adjacent Data DIR exists next to the Note Rmd file,
titled with the PREFIX - this is where the `sampleDataFrame` is assumed to exist, and where the new Data
Frames will be written.
}
